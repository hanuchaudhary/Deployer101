// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  clerkId        String    @unique @default("")
  name           String?
  email          String    @unique
  githubUsername String?   @unique
  profileImage   String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  projects       Project[] // One-to-many: User can have multiple projects
}

model Project {
  id            String       @id @default(uuid())
  name          String
  githubRepoUrl String
  subDomain     String       @unique
  customDomain  String?      @unique
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  userId        String
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  deployments   Deployment[]

  @@index([subDomain])
}

enum DEPLOYMENT_STATUS {
  IDLE
  READY
  IN_PROGRESS
  SUCCEEDED
  FAILED
  CANCELED
  QUEUED
}

model Deployment {
  id        String            @id @default(uuid())
  projectId String
  project   Project           @relation(fields: [projectId], references: [id], onDelete: Cascade)
  status    DEPLOYMENT_STATUS @default(IDLE)
  createdAt DateTime          @default(now())
  error     String?
  updatedAt DateTime          @updatedAt
  Log       Log[]

  @@index([status])
}

model Log {
  id           String     @id @default(uuid())
  deploymentId String
  deployment   Deployment @relation(fields: [deploymentId], references: [id], onDelete: Cascade)
  log          String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@index([createdAt])
}
